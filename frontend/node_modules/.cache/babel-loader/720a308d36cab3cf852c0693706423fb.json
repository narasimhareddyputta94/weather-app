{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naras\\\\Desktop\\\\weatherapp\\\\frontend\\\\src\\\\components\\\\Forecast.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction groupByDate(data) {\n  return data.time.map((date, index) => {\n    return {\n      date: new Date(date).toLocaleDateString(undefined, {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      }),\n      temperatureMax: data.temperature_2m_max[index],\n      temperatureMin: data.temperature_2m_min[index],\n      precipitation: data.precipitation_sum[index],\n      windspeedMax: data.windspeed_10m_max[index],\n      windgustsMax: data.windgusts_10m_max[index],\n      uvIndexMax: data.uv_index_max[index]\n    };\n  });\n}\nfunction Forecast({\n  data\n}) {\n  if (!data || !data.daily || !Array.isArray(data.daily.time)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No forecast data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n  const groupedData = groupByDate(data.daily);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-grid\",\n      children: groupedData.map((forecast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-date\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: forecast.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-details\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-detail\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Max Temp: \", forecast.temperatureMax, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Min Temp: \", forecast.temperatureMin, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Precipitation: \", forecast.precipitation, \" mm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wind Speed: \", forecast.windspeedMax, \" km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wind Gusts: \", forecast.windgustsMax, \" km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"UV Index: \", forecast.uvIndexMax]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","groupByDate","data","time","map","date","index","Date","toLocaleDateString","undefined","weekday","month","day","temperatureMax","temperature_2m_max","temperatureMin","temperature_2m_min","precipitation","precipitation_sum","windspeedMax","windspeed_10m_max","windgustsMax","windgusts_10m_max","uvIndexMax","uv_index_max","Forecast","daily","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","groupedData","className","forecast","_c","$RefreshReg$"],"sources":["C:/Users/naras/Desktop/weatherapp/frontend/src/components/Forecast.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction groupByDate(data) {\r\n    return data.time.map((date, index) => {\r\n        return {\r\n            date: new Date(date).toLocaleDateString(undefined, { weekday: 'long', month: 'long', day: 'numeric' }),\r\n            temperatureMax: data.temperature_2m_max[index],\r\n            temperatureMin: data.temperature_2m_min[index],\r\n            precipitation: data.precipitation_sum[index],\r\n            windspeedMax: data.windspeed_10m_max[index],\r\n            windgustsMax: data.windgusts_10m_max[index],\r\n            uvIndexMax: data.uv_index_max[index],\r\n        };\r\n    });\r\n}\r\n\r\nfunction Forecast({ data }) {\r\n    if (!data || !data.daily || !Array.isArray(data.daily.time)) {\r\n        return <p>No forecast data available.</p>;\r\n    }\r\n\r\n    const groupedData = groupByDate(data.daily);\r\n\r\n    return (\r\n        <div className=\"forecast\">\r\n            <h2>Weather Forecast</h2>\r\n            <div className=\"forecast-grid\">\r\n                {groupedData.map((forecast, index) => (\r\n                    <div key={index} className=\"forecast-row\">\r\n                        <div className=\"forecast-date\">\r\n                            <h3>{forecast.date}</h3>\r\n                        </div>\r\n                        <div className=\"forecast-details\">\r\n                            <div className=\"forecast-detail\">\r\n                                <p>Max Temp: {forecast.temperatureMax}°C</p>\r\n                                <p>Min Temp: {forecast.temperatureMin}°C</p>\r\n                                <p>Precipitation: {forecast.precipitation} mm</p>\r\n                                <p>Wind Speed: {forecast.windspeedMax} km/h</p>\r\n                                <p>Wind Gusts: {forecast.windgustsMax} km/h</p>\r\n                                <p>UV Index: {forecast.uvIndexMax}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forecast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}