{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naras\\\\Desktop\\\\weatherapp\\\\frontend\\\\src\\\\components\\\\WeatherApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from './SearchBar';\nimport CurrentWeather from './CurrentWeather';\nimport HourlyForecast from './HourlyForecast';\nimport Forecast from './Forecast';\nimport './styles/WeatherApp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherApp() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n  const [hourlyData, setHourlyData] = useState(null);\n  const [selectedDay, setSelectedDay] = useState(null); // State for selected day\n  const [error, setError] = useState(null);\n  const handleSearch = location => {\n    setError(null);\n\n    // Fetch current weather data\n    fetch(`http://localhost:8080/api/weather/current?location=${location}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`Error fetching current weather: ${response.statusText}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Current weather data received:\", data);\n      setWeatherData(data);\n    }).catch(error => {\n      console.error(\"Error fetching current weather:\", error);\n      setWeatherData(null);\n      setError(\"Failed to fetch current weather data. Please try again.\");\n    });\n\n    // Fetch daily forecast data\n    fetch(`http://localhost:8080/api/weather/forecast?location=${location}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`Error fetching forecast: ${response.statusText}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Forecast data received:\", data);\n      setForecastData(data.daily);\n    }).catch(error => {\n      console.error(\"Error fetching forecast:\", error);\n      setForecastData(null);\n      setError(\"Failed to fetch weather forecast. Please try again.\");\n    });\n\n    // Fetch hourly forecast data\n    fetch(`http://localhost:8080/api/weather/hourly?location=${location}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`Error fetching hourly forecast: ${response.statusText}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Hourly forecast data received:\", data);\n      setHourlyData(data.hourly);\n    }).catch(error => {\n      console.error(\"Error fetching hourly forecast:\", error);\n      setHourlyData(null);\n      setError(\"Failed to fetch hourly forecast. Please try again.\");\n    });\n  };\n  const handleDayClick = dayIndex => {\n    setSelectedDay(dayIndex);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }, this), forecastData && /*#__PURE__*/_jsxDEV(Forecast, {\n      data: forecastData,\n      selectedDay: selectedDay,\n      onDayClick: handleDayClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), hourlyData && selectedDay !== null && /*#__PURE__*/_jsxDEV(HourlyForecast, {\n      data: hourlyData,\n      selectedDay: selectedDay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(WeatherApp, \"uMQxiuG3ak/pietsQX/GW5aiaoY=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","SearchBar","CurrentWeather","HourlyForecast","Forecast","jsxDEV","_jsxDEV","WeatherApp","_s","weatherData","setWeatherData","forecastData","setForecastData","hourlyData","setHourlyData","selectedDay","setSelectedDay","error","setError","handleSearch","location","fetch","then","response","ok","Error","statusText","json","data","console","log","catch","daily","hourly","handleDayClick","dayIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","style","color","onDayClick","_c","$RefreshReg$"],"sources":["C:/Users/naras/Desktop/weatherapp/frontend/src/components/WeatherApp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport CurrentWeather from './CurrentWeather';\r\nimport HourlyForecast from './HourlyForecast';\r\nimport Forecast from './Forecast';\r\nimport './styles/WeatherApp.css';\r\n\r\nfunction WeatherApp() {\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [forecastData, setForecastData] = useState(null);\r\n    const [hourlyData, setHourlyData] = useState(null);\r\n    const [selectedDay, setSelectedDay] = useState(null); // State for selected day\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleSearch = (location) => {\r\n        setError(null);\r\n\r\n        // Fetch current weather data\r\n        fetch(`http://localhost:8080/api/weather/current?location=${location}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(`Error fetching current weather: ${response.statusText}`);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log(\"Current weather data received:\", data);\r\n                setWeatherData(data);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching current weather:\", error);\r\n                setWeatherData(null);\r\n                setError(\"Failed to fetch current weather data. Please try again.\");\r\n            });\r\n\r\n        // Fetch daily forecast data\r\n        fetch(`http://localhost:8080/api/weather/forecast?location=${location}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(`Error fetching forecast: ${response.statusText}`);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log(\"Forecast data received:\", data);\r\n                setForecastData(data.daily);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching forecast:\", error);\r\n                setForecastData(null);\r\n                setError(\"Failed to fetch weather forecast. Please try again.\");\r\n            });\r\n\r\n        // Fetch hourly forecast data\r\n        fetch(`http://localhost:8080/api/weather/hourly?location=${location}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(`Error fetching hourly forecast: ${response.statusText}`);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log(\"Hourly forecast data received:\", data);\r\n                setHourlyData(data.hourly);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching hourly forecast:\", error);\r\n                setHourlyData(null);\r\n                setError(\"Failed to fetch hourly forecast. Please try again.\");\r\n            });\r\n    };\r\n\r\n    const handleDayClick = (dayIndex) => {\r\n        setSelectedDay(dayIndex);\r\n    };\r\n\r\n    return (\r\n        <div className=\"weather-app\">\r\n            <h1>Weather App</h1>\r\n            <SearchBar onSearch={handleSearch} />\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {weatherData && <CurrentWeather data={weatherData} />}\r\n            {forecastData && (\r\n                <Forecast\r\n                    data={forecastData}\r\n                    selectedDay={selectedDay}\r\n                    onDayClick={handleDayClick}\r\n                />\r\n            )}\r\n            {hourlyData && selectedDay !== null && (\r\n                <HourlyForecast\r\n                    data={hourlyData}\r\n                    selectedDay={selectedDay}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeatherApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}