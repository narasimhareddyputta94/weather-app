{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naras\\\\Desktop\\\\weatherapp\\\\frontend\\\\src\\\\components\\\\HourlyForecast.js\";\nimport React from 'react';\nimport './styles/HourlyForecast.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction groupByDate(hourlyData) {\n  const grouped = {};\n  hourlyData.time.forEach((time, index) => {\n    const date = new Date(time).toLocaleDateString(undefined, {\n      weekday: 'long',\n      month: 'long',\n      day: 'numeric'\n    });\n    if (!grouped[date]) {\n      grouped[date] = [];\n    }\n    grouped[date].push({\n      time: new Date(time).toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      }),\n      temperature: hourlyData.temperature_2m[index],\n      weatherCode: hourlyData.weathercode[index],\n      windSpeed: hourlyData.windspeed_10m[index],\n      humidity: hourlyData.relativehumidity_2m[index],\n      cloudCover: hourlyData.cloudcover[index],\n      uvIndex: hourlyData.uv_index[index]\n    });\n  });\n  return grouped;\n}\nfunction HourlyForecast({\n  data\n}) {\n  const groupedData = groupByDate(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hourly-forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hourly Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), Object.keys(groupedData).map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hourly-day-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hourly-grid\",\n        children: groupedData[date].map((hour, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hourly-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: hour.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temp: \", hour.temperature, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Weather Code: \", hour.weatherCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind: \", hour.windSpeed, \" km/h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Humidity: \", hour.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Cloud Cover: \", hour.cloudCover, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"UV Index: \", hour.uvIndex]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_c = HourlyForecast;\nexport default HourlyForecast;\nvar _c;\n$RefreshReg$(_c, \"HourlyForecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","groupByDate","hourlyData","grouped","time","forEach","index","date","Date","toLocaleDateString","undefined","weekday","month","day","push","toLocaleTimeString","hour","minute","temperature","temperature_2m","weatherCode","weathercode","windSpeed","windspeed_10m","humidity","relativehumidity_2m","cloudCover","cloudcover","uvIndex","uv_index","HourlyForecast","data","groupedData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","idx","_c","$RefreshReg$"],"sources":["C:/Users/naras/Desktop/weatherapp/frontend/src/components/HourlyForecast.js"],"sourcesContent":["import React from 'react';\r\nimport './styles/HourlyForecast.css';\r\n\r\nfunction groupByDate(hourlyData) {\r\n    const grouped = {};\r\n\r\n    hourlyData.time.forEach((time, index) => {\r\n        const date = new Date(time).toLocaleDateString(undefined, {\r\n            weekday: 'long',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        });\r\n\r\n        if (!grouped[date]) {\r\n            grouped[date] = [];\r\n        }\r\n\r\n        grouped[date].push({\r\n            time: new Date(time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n            temperature: hourlyData.temperature_2m[index],\r\n            weatherCode: hourlyData.weathercode[index],\r\n            windSpeed: hourlyData.windspeed_10m[index],\r\n            humidity: hourlyData.relativehumidity_2m[index],\r\n            cloudCover: hourlyData.cloudcover[index],\r\n            uvIndex: hourlyData.uv_index[index],\r\n        });\r\n    });\r\n\r\n    return grouped;\r\n}\r\n\r\nfunction HourlyForecast({ data }) {\r\n    const groupedData = groupByDate(data);\r\n\r\n    return (\r\n        <div className=\"hourly-forecast\">\r\n            <h2>Hourly Weather Forecast</h2>\r\n            {Object.keys(groupedData).map((date, index) => (\r\n                <div key={index} className=\"hourly-day-group\">\r\n                    <h3>{date}</h3>\r\n                    <div className=\"hourly-grid\">\r\n                        {groupedData[date].map((hour, idx) => (\r\n                            <div key={idx} className=\"hourly-row\">\r\n                                <p><strong>{hour.time}</strong></p>\r\n                                <p>Temp: {hour.temperature}Â°C</p>\r\n                                <p>Weather Code: {hour.weatherCode}</p>\r\n                                <p>Wind: {hour.windSpeed} km/h</p>\r\n                                <p>Humidity: {hour.humidity}%</p>\r\n                                <p>Cloud Cover: {hour.cloudCover}%</p>\r\n                                <p>UV Index: {hour.uvIndex}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HourlyForecast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}