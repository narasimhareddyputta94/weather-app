{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naras\\\\Desktop\\\\weatherapp\\\\frontend\\\\src\\\\components\\\\Forecast.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction groupByDate(data) {\n  return data.reduce((acc, forecast, index) => {\n    const date = new Date(forecast.time).toLocaleDateString(undefined, {\n      weekday: 'long',\n      month: 'long',\n      day: 'numeric'\n    });\n    if (!acc[date]) {\n      acc[date] = [];\n    }\n    acc[date].push({\n      temperature: forecast.temperature_2m,\n      weathercode: forecast.weathercode,\n      windspeed: forecast.windspeed_10m,\n      humidity: forecast.relativehumidity_2m,\n      uvIndex: forecast.uv_index\n    });\n    return acc;\n  }, {});\n}\nfunction Forecast({\n  data\n}) {\n  if (!data || !Array.isArray(data.daily.time)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No forecast data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n  const groupedData = groupByDate(data.hourly);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-grid\",\n      children: Object.keys(groupedData).map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-date\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-details\",\n          children: groupedData[date].map((forecast, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-detail\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Temperature: \", forecast.temperature, \"\\xB0F\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Weather: \", forecast.weathercode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wind Speed: \", forecast.windspeed, \" mph\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Humidity: \", forecast.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"UV Index: \", forecast.uvIndex]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","groupByDate","data","reduce","acc","forecast","index","date","Date","time","toLocaleDateString","undefined","weekday","month","day","push","temperature","temperature_2m","weathercode","windspeed","windspeed_10m","humidity","relativehumidity_2m","uvIndex","uv_index","Forecast","Array","isArray","daily","children","fileName","_jsxFileName","lineNumber","columnNumber","groupedData","hourly","className","Object","keys","map","idx","_c","$RefreshReg$"],"sources":["C:/Users/naras/Desktop/weatherapp/frontend/src/components/Forecast.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction groupByDate(data) {\r\n    return data.reduce((acc, forecast, index) => {\r\n        const date = new Date(forecast.time).toLocaleDateString(undefined, { weekday: 'long', month: 'long', day: 'numeric' });\r\n        if (!acc[date]) {\r\n            acc[date] = [];\r\n        }\r\n        acc[date].push({\r\n            temperature: forecast.temperature_2m,\r\n            weathercode: forecast.weathercode,\r\n            windspeed: forecast.windspeed_10m,\r\n            humidity: forecast.relativehumidity_2m,\r\n            uvIndex: forecast.uv_index\r\n        });\r\n        return acc;\r\n    }, {});\r\n}\r\n\r\nfunction Forecast({ data }) {\r\n    if (!data || !Array.isArray(data.daily.time)) {\r\n        return <p>No forecast data available.</p>;\r\n    }\r\n\r\n    const groupedData = groupByDate(data.hourly);\r\n\r\n    return (\r\n        <div className=\"forecast\">\r\n            <h2>Weather Forecast</h2>\r\n            <div className=\"forecast-grid\">\r\n                {Object.keys(groupedData).map((date, index) => (\r\n                    <div key={index} className=\"forecast-row\">\r\n                        <div className=\"forecast-date\">\r\n                            <h3>{date}</h3>\r\n                        </div>\r\n                        <div className=\"forecast-details\">\r\n                            {groupedData[date].map((forecast, idx) => (\r\n                                <div key={idx} className=\"forecast-detail\">\r\n                                    <p>Temperature: {forecast.temperature}Â°F</p>\r\n                                    <p>Weather: {forecast.weathercode}</p>\r\n                                    <p>Wind Speed: {forecast.windspeed} mph</p>\r\n                                    <p>Humidity: {forecast.humidity}%</p>\r\n                                    <p>UV Index: {forecast.uvIndex}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forecast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}