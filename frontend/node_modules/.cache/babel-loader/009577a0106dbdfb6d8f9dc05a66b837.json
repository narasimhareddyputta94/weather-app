{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naras\\\\Desktop\\\\weatherapp\\\\frontend\\\\src\\\\components\\\\Forecast.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction groupByDate(data) {\n  return data.reduce((acc, forecast) => {\n    const date = new Date(forecast.dt * 1000).toLocaleDateString(undefined, {\n      weekday: 'long',\n      month: 'long',\n      day: 'numeric'\n    });\n    if (!acc[date]) {\n      acc[date] = [];\n    }\n    acc[date].push(forecast);\n    return acc;\n  }, {});\n}\nfunction Forecast({\n  data\n}) {\n  if (!data || !Array.isArray(data.list)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No forecast data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  const groupedData = groupByDate(data.list);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), Object.keys(groupedData).map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-details\",\n        children: groupedData[date].map((forecast, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"weather-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`,\n              alt: forecast.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(forecast.main.temp), \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: forecast.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","groupByDate","data","reduce","acc","forecast","date","Date","dt","toLocaleDateString","undefined","weekday","month","day","push","Forecast","Array","isArray","list","children","fileName","_jsxFileName","lineNumber","columnNumber","groupedData","className","Object","keys","map","index","idx","src","weather","icon","alt","description","Math","round","main","temp","_c","$RefreshReg$"],"sources":["C:/Users/naras/Desktop/weatherapp/frontend/src/components/Forecast.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction groupByDate(data) {\r\n    return data.reduce((acc, forecast) => {\r\n        const date = new Date(forecast.dt * 1000).toLocaleDateString(undefined, { weekday: 'long', month: 'long', day: 'numeric' });\r\n        if (!acc[date]) {\r\n            acc[date] = [];\r\n        }\r\n        acc[date].push(forecast);\r\n        return acc;\r\n    }, {});\r\n}\r\n\r\nfunction Forecast({ data }) {\r\n    if (!data || !Array.isArray(data.list)) {\r\n        return <p>No forecast data available.</p>;\r\n    }\r\n\r\n    const groupedData = groupByDate(data.list);\r\n\r\n    return (\r\n        <div className=\"forecast\">\r\n            <h2>Weather Forecast</h2>\r\n            {Object.keys(groupedData).map((date, index) => (\r\n                <div key={index} className=\"forecast-item\">\r\n                    <h3>{date}</h3>\r\n                    <div className=\"forecast-details\">\r\n                        {groupedData[date].map((forecast, idx) => (\r\n                            <div key={idx} className=\"forecast-detail\">\r\n                                <p className=\"weather-icon\">\r\n                                    <img\r\n                                        src={`http://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`}\r\n                                        alt={forecast.weather[0].description}\r\n                                    />\r\n                                </p>\r\n                                <p>{Math.round(forecast.main.temp)}Â°F</p>\r\n                                <p>{forecast.weather[0].description}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forecast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}